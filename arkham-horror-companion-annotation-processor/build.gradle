plugins {
	id 'java'
	id 'eclipse'
	id 'jacoco'
}

group = 'com.wanderingwyatt'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

repositories {
	mavenCentral()
	jcenter()
}

dependencies {
	implementation project(':arkham-horror-companion-annotations')
	// https://mvnrepository.com/artifact/javax.cache/cache-api
	implementation group: 'javax.cache', name: 'cache-api', version: '1.1.1'
	// https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api
	implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
	// https://mvnrepository.com/artifact/org.apache.velocity/velocity-engine-core
	implementation group: 'org.apache.velocity', name: 'velocity-engine-core', version: '2.2'
	

	implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.3'
  	implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.3'
	// https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j-impl
	implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.13.3'
	// https://mvnrepository.com/artifact/org.slf4j/slf4j-api
	implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
	// https://mvnrepository.com/artifact/com.google.dagger/dagger
	implementation group: 'com.google.dagger', name: 'dagger', version: '2.29.1'

	// https://mvnrepository.com/artifact/com.google.dagger/dagger-compiler
	annotationProcessor group: 'com.google.dagger', name: 'dagger-compiler', version: '2.29.1'
	testAnnotationProcessor group: 'com.google.dagger', name: 'dagger-compiler', version: '2.29.1'
	
	testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.0"
	testImplementation "org.mockito:mockito-core:2.+"
	testImplementation "org.mockito:mockito-junit-jupiter:2.+"
	// https://mvnrepository.com/artifact/com.h2database/h2
	testImplementation group: 'com.h2database', name: 'h2', version: '1.4.200'

	testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.0"
	testRuntimeOnly "org.apache.logging.log4j:log4j-jul:2.13.3"
}

ext {
	jacocoExclusions = ['**/com/wanderingwyatt/arkham/modules/**',
						'**/com/wanderingwyatt/arkham/components/**',
						'**/com/wanderingwyatt/arkham/**/*Exception*']
}

jacocoTestReport {
	dependsOn test
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
        	fileTree(dir: it, exclude: jacocoExclusions)
        }))
    }
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.8000
			}
		}
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
        	fileTree(dir: it, exclude: jacocoExclusions)
        }))
    }
}

test {
	useJUnitPlatform()
	systemProperty 'java.util.logging.manager', 'org.apache.logging.log4j.jul.LogManager'
	finalizedBy jacocoTestReport
}